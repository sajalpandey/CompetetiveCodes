/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        struct ListNode* head =NULL,*ptr;
        int carry=0,sum;
        while( l1 && l2)
        {
            
            sum = l1->val + l2->val+carry;
            sum=sum%10;
            carry=sum/10;
            ListNode *temp = new ListNode(sum);
            if(!head)
            {
                head=temp;
                ptr=head;
            }
            else
            {
                ptr->next=temp;
                ptr=ptr->next;
            }
            l1=l1->next;
            l2=l2->next;
        }
        
        while(l1)
        {
            //cout<<l1->val;
            sum=l1->val+carry;
            sum=sum%10;
            carry=sum/10;
            ListNode *temp = new ListNode(sum);
            ptr->next=temp;
            ptr=ptr->next;
            l1=l1->next;
        }
        while(l2)
        {
            sum=l2->val+carry;
            sum=sum%10;
            carry=sum/10;
            ListNode *temp = new ListNode(sum);
            ptr->next=temp;
            ptr=ptr->next;
            l2=l2->next;
        }
        
        if(carry)
        {
            ListNode *temp = new ListNode(carry);
            ptr->next=temp;
        }
        //cout<<head->val;
        return head;
    }
};