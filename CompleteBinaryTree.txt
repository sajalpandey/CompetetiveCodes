/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCompleteTree(TreeNode* root) {
        queue<TreeNode *>q;
        if(!root || !root->left && !root->right)
            return true;
        TreeNode *tmp=NULL;
        int flag=0;
        q.push(root);
        while(!q.empty())
        {
            tmp=q.front();
            q.pop();
            if(tmp->left)
            {
                if(flag)
                    return false;
                q.emplace(tmp->left);
            }
            else
                flag=1;
            if(tmp->right)
            {
                if(flag)
                    return false;
                q.emplace(tmp->right);
            }
            else
                flag=1;
        }
        return true;
    }
};