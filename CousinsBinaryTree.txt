/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        queue<TreeNode *> q;
        TreeNode *parX=NULL,*parY=NULL,*tmp=NULL;
        q.push(root);
        int lx=0,ly=0,level=1,size;
        while(!q.empty())
        {
            size=q.size();
            for(int i=0;i<size;i++)
            {
                tmp=q.front();
                q.pop();
                if(tmp->left)
                {
                    q.push(tmp->left);
                    if(tmp->left->val==x){
                        parX=tmp;
                        lx=level;
                    }
                    if(tmp->left->val==y){
                        parY=tmp;
                        ly=level;
                    }
                }
                if(tmp->right)
                {
                    q.push(tmp->right);
                    if(tmp->right->val==x){
                        parX=tmp;
                        lx=level;
                    }
                    if(tmp->right->val==y){
                        parY=tmp;
                        ly=level;
                    };

                }
                if(parX && parY)
                    break;
            }  
            level++;
        }
        if(parX && parY)
            if(lx==ly && parX!=parY)
                return true;
        return false;
    }
};