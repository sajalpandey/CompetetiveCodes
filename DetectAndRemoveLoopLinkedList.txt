/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    ListNode *detectCycle(ListNode *head) {
        if(!head)
            return NULL;
        int flag=0;
        ListNode *slow=head,*fast=head;
        slow=slow->next;
        if(fast->next)
        fast=fast->next->next;
        while(fast && fast->next)
        {
            if(slow==fast)
            {
                slow=head;
                while(slow!=fast)
                {
                    slow=slow->next;
                    fast=fast->next;
                }
                return slow;
            }
                
            slow=slow->next;
            fast=fast->next->next;
        }
        return NULL;
    }
};