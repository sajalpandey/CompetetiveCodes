class Solution {
public:
    void prefixTable(vector<int> &prefix ,string needle)
    {
        int i=1,j=0;prefix.push_back(0);
        while(i<needle.size())
        {
            if(needle[i]==needle[j])
            {
                prefix[i]=j+1;
                i++;
                j++;
            }
            else if(j>0)
                j=prefix[j-1];
            else
            {
                prefix[i]=0;
                i++;
            }
        }
    }
    int strStr(string haystack, string needle) {
        if(needle.size()==0)
            return 0;
        vector<int> prefix(needle.size(),0);
        prefixTable(prefix,needle);
        int i=0,j=0;
        while(i<haystack.size())
        {
            if(haystack[i]==needle[j])
            {
                if(j==needle.size()-1)
                    return i-j;
                else
                {
                    i++;
                    j++;
                }
            }
            else if(j>0)
                j=prefix[j-1];
            else
                i++;
        }
        return -1;
    }
};