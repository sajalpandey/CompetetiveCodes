/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode *root,int sum,vector<vector<int>>&ans,vector<int> v)
    {
        if(sum==root->val && !root->left && !root->right)
        {
            v.emplace_back(root->val);
            ans.emplace_back(v);
            return ;
        }
        v.emplace_back(root->val);
        if(root->left)
            helper(root->left,sum-root->val,ans,v);   
        if(root->right)
            helper(root->right,sum-root->val,ans,v);
    }
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>>ans;
        vector<int> v;
        if(!root)
            return ans;
        helper(root,sum,ans,v);
        return ans;
    }
};