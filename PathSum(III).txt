/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count=0;
    void helper(TreeNode *root,int sum)
    {
        if(!root)
            return;
        if(sum==root->val)
            count++;
        if(root->left)
            helper(root->left,sum-root->val);
        if(root->right)
            helper(root->right,sum-root->val);
    }
    void dfsTraverse(TreeNode *root,int sum)
    {
        if(!root)
            return;
        helper(root,sum);
        dfsTraverse(root->left,sum);
        dfsTraverse(root->right,sum);
    }
    int pathSum(TreeNode* root, int sum) {
        if(!root)
            return 0;
        dfsTraverse(root,sum);
        return count;
    }
};