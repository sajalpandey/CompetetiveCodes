/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

**********Two stack solution**************

class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> ans;
        stack<TreeNode *> s1,s2;
        TreeNode *curr=root;
        s1.push(curr);
        while(!s1.empty())
        {
            curr=s1.top();
            s1.pop();
            s2.push(curr);
            if(curr && curr->left)
                s1.push(curr->left);
            if(curr && curr->right)
                s1.push(curr->right);
            
        }
        while(!s2.empty())
        {
            curr=s2.top();
            if(curr)
            ans.emplace_back(curr->val);
            s2.pop();
        }
        return ans;
    }
};


******One stack Solution***********
